:orphan:

:mod:`trieste.acquisition.combination`
======================================

.. py:module:: trieste.acquisition.combination


Module Contents
---------------

.. class:: Reducer(*builders: trieste.acquisition.function.AcquisitionFunctionBuilder)


   Bases: :class:`trieste.acquisition.function.AcquisitionFunctionBuilder`

   A :class:`Reducer` builds an :func:`~trieste.acquisition.AcquisitionFunction` whose output is
   calculated from the outputs of a number of other
   :func:`~trieste.acquisition.AcquisitionFunction`\ s. How these outputs are composed is
   defined by the method :meth:`_reduce`.

   :param \*builders: Acquisition function builders. At least one must be provided.
   :raise ValueError: If no builders are specified.

   .. method:: prepare_acquisition_function(self, datasets: Mapping[(str, Dataset)], models: Mapping[(str, ProbabilisticModel)]) -> trieste.acquisition.function.AcquisitionFunction

      Return an acquisition function. This acquisition function is defined by first building
      acquisition functions from each of the
      :class:`~trieste.acquisition.AcquisitionFunctionBuilder`\ s specified at
      :meth:`__init__`, then reducing, with :meth:`_reduce`, the output of each of those
      acquisition functions.

      :param datasets: The data from the observer.
      :param models: The models over each dataset in ``datasets``.
      :return: The reduced acquisition function.


   .. method:: acquisitions(self) -> Sequence[AcquisitionFunctionBuilder]
      :property:

      The acquisition function builders specified at class initialisation. 


   .. method:: _reduce(self, inputs: Sequence[TensorType]) -> trieste.type.TensorType
      :abstractmethod:

      :param inputs: The output of each constituent acquisition function.
      :return: The output of the reduced acquisition function.



.. class:: Sum(*builders: trieste.acquisition.function.AcquisitionFunctionBuilder)


   Bases: :class:`trieste.acquisition.combination.Reducer`

   :class:`Reducer` whose resulting acquisition function returns the element-wise sum of the
   outputs of constituent acquisition functions.

   :param \*builders: Acquisition function builders. At least one must be provided.
   :raise ValueError: If no builders are specified.

   .. method:: _reduce(self, inputs: Sequence[TensorType]) -> trieste.type.TensorType

      :param inputs: The outputs of each acquisition function.
      :return: The element-wise sum of the ``inputs``.



.. class:: Product(*builders: trieste.acquisition.function.AcquisitionFunctionBuilder)


   Bases: :class:`trieste.acquisition.combination.Reducer`

   :class:`Reducer` whose resulting acquisition function returns the element-wise product of the
   outputs of constituent acquisition functions.

   :param \*builders: Acquisition function builders. At least one must be provided.
   :raise ValueError: If no builders are specified.

   .. method:: _reduce(self, inputs: Sequence[TensorType]) -> trieste.type.TensorType

      :param inputs: The outputs of each acquisition function.
      :return: The element-wise product of the ``inputs``.



